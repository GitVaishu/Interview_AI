-- ==========================================================
-- Database Schema for AI Interview System (PostgreSQL/Supabase)
-- Execute this script in your Supabase SQL Editor (or via CLI)
-- ==========================================================

-- 1. USERS TABLE
-- Stores basic user information, primarily linked by the Clerk ID.
-- This is used to map Clerk's UUID to our application data.
CREATE TABLE users (
-- IMPORTANT: This primary key MUST match the unique ID provided by Clerk (user.id).
user_id TEXT PRIMARY KEY,
email TEXT UNIQUE NOT NULL,
first_name TEXT,
last_name TEXT,
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 2. RESUMES TABLE
-- Stores the content of the resume and the AI's initial structured analysis.
CREATE TABLE resumes (
resume_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),

-- Foreign Key link to the user who uploaded the resume
user_id TEXT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE, 

upload_date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
job_role TEXT, -- The role the user is targeting

-- Raw text extracted from the PDF/DOCX (for LLM context)
raw_text TEXT NOT NULL, 

-- Structured analysis by the LLM (e.g., JSON of skills, experience, education)
structured_data JSONB, 

-- If using pgvector later, this column will hold the resume's vector embedding.
embedding VECTOR(1536) -- Standard dimension for common embedding models


);

-- 3. INTERVIEW SESSIONS TABLE
-- Stores metadata for each mock interview taken by the user.
CREATE TABLE interview_sessions (
session_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),

-- Foreign Key link to the user
user_id TEXT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,

start_time TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
end_time TIMESTAMP WITH TIME ZONE,

difficulty TEXT, -- e.g., 'easy', 'medium', 'hard'
topics_covered TEXT[], -- Array of topics, e.g., ['SQL', 'React']

final_score NUMERIC(5, 2), -- The final numerical score (e.g., 85.50)
final_report TEXT -- The comprehensive guidance generated by the LLM


);

-- 4. MESSAGES/METRICS TABLE (The core assessment data)
-- Stores the history, transcripts, and all behavioral analysis metrics for an interview.
CREATE TABLE interview_messages (
message_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),

-- Foreign Key link to the specific interview session
session_id UUID NOT NULL REFERENCES interview_sessions (session_id) ON DELETE CASCADE,

-- 'ai' or 'user'
role TEXT NOT NULL, 

content TEXT NOT NULL, -- The question or the user's spoken answer transcript
timestamp TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,

-- Behavioral/Psychometric Metrics (The unique feature of your app)
confidence_score NUMERIC(5, 2), -- Score from 0 to 100
facial_emotion TEXT,            -- e.g., 'scared', 'confident', 'confused'
proctoring_flag BOOLEAN DEFAULT FALSE, -- True if cheating/looking away detected

-- Optional: Stores the embedding of the question/answer for RAG
embedding VECTOR(1536)


);

-- 5. INDEXES (For speed)
-- Create indexes to speed up queries on foreign keys and timestamps.
CREATE INDEX idx_messages_session_id ON interview_messages (session_id);
CREATE INDEX idx_sessions_user_id ON interview_sessions (user_id);
CREATE INDEX idx_resumes_user_id ON resumes (user_id);